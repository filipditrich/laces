var mongoose = require('mongoose');
var bcrypt = require('bcryptjs');

var UserSchemaPrivate = mongoose.Schema({
	username: {type: String, index: true},
	password: {type: String},
	email: {type: String},
	name: {type: String}
});

var UserPrivate = module.exports = mongoose.model('UserPrivate', UserSchemaPrivate);

module.exports.createUser = function(newUser, callback){
	bcrypt.genSalt(10, function(err, salt){
		bcrypt.hash(newUser.password, salt, function(err, hash){
			newUser.password = hash;
			newUser.save(callback);
		})
	})
}

module.exports.getUserByUsername = function(username, callback){
	var query = {username: username};
	UserPrivate.findOne(query, callback);
}

module.exports.getUserById = function(id, callback){
	UserPrivate.findById(id, callback);
}

module.exports.comparePassword = function(candidatePassword, hash, callback){
	bcrypt.compare(candidatePassword, hash, function(err, isMatch){
		if (err) throw err;
		callback(null, isMatch);
	});
}

